<?php

	use App\Http\Controllers\Api\ActionItemController;
	use App\Http\Controllers\Api\FileController as ApiFileController;
	use App\Http\Controllers\Api\MessageController as ApiMessageController;
	use App\Http\Controllers\Api\NoteController;
	use App\Http\Controllers\Api\TeamController as ApiTeamController;
	use App\Http\Controllers\AppController;
	use App\Http\Controllers\Auth\LoginController;
	use App\Http\Controllers\Auth\RegisterController;
	use App\Http\Controllers\ChatController;
	use App\Http\Controllers\FileController;
	use App\Http\Controllers\GroupChatController;
	use App\Http\Controllers\MessageController;
	use App\Http\Controllers\ProfileController;
	use App\Http\Controllers\TeamController;
	use App\Http\Controllers\UtilityController;
	use Illuminate\Support\Facades\Route;
	use App\Http\Controllers\Api\UsageController;
	use App\Http\Controllers\HomeController;
	use App\Http\Controllers\LandingController; // ADDED
	use App\Http\Controllers\SubscriptionController; // ADDED
	use Laravel\Cashier\Http\Controllers\WebhookController; // ADDED

// --- Public Routes ---
	Route::get('/', [LandingController::class, 'index'])->name('landing'); // MODIFIED: Landing page is the new root

// --- Authentication Routes (Generated by ui bootstrap --auth, modified) ---

// Login Routes
	Route::get('login', [LoginController::class, 'showLoginForm'])->name('login');
	Route::post('login', [LoginController::class, 'login']);
	Route::post('logout', [LoginController::class, 'logout'])->name('logout');

// Registration Routes
	Route::get('register', [RegisterController::class, 'showRegistrationForm'])->name('register');
	Route::post('register', [RegisterController::class, 'register']);

// --- End Authentication Routes ---


// --- Main Application Routes (Require Authentication) ---
	Route::middleware('auth')->group(function () {
		// Subscription Routes
		Route::get('/subscribe', [SubscriptionController::class, 'index'])->name('subscribe.index');
		Route::post('/subscribe/checkout', [SubscriptionController::class, 'checkout'])->name('subscribe.checkout');
		Route::get('/subscribe/success', [SubscriptionController::class, 'success'])->name('subscribe.success');
		Route::get('/subscribe/cancel', [SubscriptionController::class, 'cancel'])->name('subscribe.cancel');
		Route::get('/billing-portal', [SubscriptionController::class, 'portal'])->name('billing.portal');

		// Routes that require an active subscription
		Route::middleware('subscribed')->group(function () {
			Route::get('/dashboard', [HomeController::class, 'index'])->name('dashboard'); // MODIFIED
			Route::get('/home', [HomeController::class, 'index'])->name('home'); // MODIFIED

			// Page-level routes that return views
			Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
			Route::get('/teams', [TeamController::class, 'index'])->name('teams.index');
			Route::get('/messages', [MessageController::class, 'index'])->name('messages.inbox');
			Route::get('/files', [FileController::class, 'index'])->name('files.index');
			// ADDED: Route for the new subscription management page.
			Route::get('/subscription', [SubscriptionController::class, 'manage'])->name('subscription.manage');
			Route::get('/chat/{chatHeaderId?}', [ChatController::class, 'show'])
				->where('chatHeaderId', '[0-9]+')
				->name('chat.show');
			Route::get('/team/{team}/group-chat/{groupChatHeader?}', [GroupChatController::class, 'show'])
				->where(['team' => '[0-9]+', 'groupChatHeader' => '[0-9]+'])
				->name('group-chat.show');

			// Form submission routes for profile
			Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
			Route::post('/profile/avatar', [ProfileController::class, 'updateAvatar'])->name('profile.avatar.update'); //
			Route::put('/password', [ProfileController::class, 'updatePassword'])->name('password.update');
			Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');
			// ADDED: Routes for canceling and resuming a subscription.
			Route::post('/subscription/cancel', [SubscriptionController::class, 'cancelSubscription'])->name('subscription.cancel.post');
			Route::post('/subscription/resume', [SubscriptionController::class, 'resumeSubscription'])->name('subscription.resume.post');


			// API Routes (Prefixed with /api and protected by auth)
			// These routes are called via AJAX from the frontend.
			Route::prefix('api')->name('api.')->group(function () {
				// Chat API
				Route::post('/chat', [ChatController::class, 'store'])->name('chat.store');
				Route::get('/chat/headers', [ChatController::class, 'indexHeaders'])->name('chat.headers.index');
				Route::get('/chat/search', [ChatController::class, 'search'])->name('chat.search');
				Route::delete('/chat/messages/{userMessage}', [ChatController::class, 'destroyMessagePair'])
					->where('userMessage', '[0-9]+')
					->name('chat.messages.destroy');
				Route::delete('/chat/headers/{chatHeader}', [ChatController::class, 'destroyHeader'])
					->where('chatHeader', '[0-9]+')
					->name('chat.headers.destroy');
				Route::post('/chat/tts', [ChatController::class, 'textToSpeech'])->name('chat.tts');

				// Group Chat API
				Route::post('/group-chat/setup', [GroupChatController::class, 'setup'])->name('group-chat.setup');
				Route::post('/group-chat/store', [GroupChatController::class, 'store'])->name('group-chat.store');
				Route::get('/team/{team}/group-chats', [GroupChatController::class, 'indexHeaders'])->name('group-chat.headers.index')->where('team', '[0-9]+');
				Route::get('/team/{team}/group-chats/search', [GroupChatController::class, 'search'])->name('group-chat.search')->where('team', '[0-9]+');
				Route::get('/team/{team}/group-chat/{groupChatHeader}/updates', [GroupChatController::class, 'getUpdates'])->name('group-chat.updates')->where(['team' => '[0-9]+', 'groupChatHeader' => '[0-9]+']);
				Route::post('/team/{team}/group-chat/{groupChatHeader}/typing', [GroupChatController::class, 'isTyping'])->name('group-chat.typing')->where(['team' => '[0-9]+', 'groupChatHeader' => '[0-9]+']);
				Route::delete('/group-chat/headers/{groupChatHeader}', [GroupChatController::class, 'destroyHeader'])->name('group-chat.headers.destroy')->where('groupChatHeader', '[0-9]+');
				Route::delete('/group-chat/messages/{userMessage}', [GroupChatController::class, 'destroyMessagePair'])->name('group-chat.messages.destroy')->where('userMessage', '[0-9]+');

				// Action Items API
				Route::get('/action-items', [ActionItemController::class, 'index'])->name('action-items.index');
				Route::post('/action-items', [ActionItemController::class, 'store'])->name('action-items.store');
				Route::patch('/action-items/{actionItem}', [ActionItemController::class, 'update'])
					->where('actionItem', '[0-9]+')
					->name('action-items.update');
				Route::delete('/action-items/{actionItem}', [ActionItemController::class, 'destroy'])
					->where('actionItem', '[0-9]+')
					->name('action-items.destroy');

				// Team API
				Route::get('/user/teams', [ApiTeamController::class, 'userTeams'])->name('user.teams');
				Route::post('/teams', [ApiTeamController::class, 'store'])->name('teams.store');
				Route::post('/teams/{team}/avatar', [ApiTeamController::class, 'updateAvatar'])->name('teams.avatar.update')->where('team', '[0-9]+');
				Route::post('/teams/{team}/members', [ApiTeamController::class, 'addMember'])->name('teams.members.store')->where('team', '[0-9]+');
				// MODIFIED: Corrected regex from '[0-g]+' to '[0-9]+'
				Route::get('/teams/{team}/members', [ApiTeamController::class, 'getMembers'])->name('teams.members.index')->where('team', '[0-9]+');
				Route::post('/user/current-team', [ApiTeamController::class, 'switchTeam'])->name('user.current-team');

				// Message API
				Route::post('/teams/{team}/messages', [ApiMessageController::class, 'sendMessage'])->name('teams.messages.store')->where('team', '[0-g]+');
				Route::get('/user/inbox', [ApiMessageController::class, 'inbox'])->name('user.inbox');
				Route::get('/user/sent', [ApiMessageController::class, 'sent'])->name('user.sent');
				Route::get('/user/unread-count', [ApiMessageController::class, 'unreadCount'])->name('user.unread-count');
				Route::get('/messages/{message}', [ApiMessageController::class, 'show'])->name('messages.show')->where('message', '[0-9]+');
				Route::patch('/messages/{message}/read', [ApiMessageController::class, 'markAsRead'])->name('messages.read')->where('message', '[0-9]+');

				// Note API
				Route::get('/notes', [NoteController::class, 'index'])->name('notes.index');
				Route::post('/notes', [NoteController::class, 'store'])->name('notes.store');
				Route::get('/notes/{note}', [NoteController::class, 'show'])->name('notes.show')->where('note', '[0-9]+');
				Route::put('/notes/{note}', [NoteController::class, 'update'])->name('notes.update')->where('note', '[0-9]+');
				Route::delete('/notes/{note}', [NoteController::class, 'destroy'])->name('notes.destroy')->where('note', '[0-9]+');

				// File Management API
				Route::get('/user/files', [ApiFileController::class, 'userFiles'])->name('user.files');
				Route::get('/teams/{team}/files', [ApiFileController::class, 'teamFiles'])->name('teams.files')->where('team', '[0-9]+');
				Route::post('/files', [ApiFileController::class, 'upload'])->name('files.upload');
				Route::get('/files/{file}/download', [ApiFileController::class, 'download'])->name('files.download')->where('file', '[0-9]+');
				Route::get('/files/{file}/preview', [ApiFileController::class, 'preview'])->name('files.preview')->where('file', '[0-9]+');
				Route::post('/files/{file}/share', [ApiFileController::class, 'share'])->name('files.share')->where('file', '[0-9]+');
				Route::post('/files/{file}/toggle-favorite', [ApiFileController::class, 'toggleFavorite'])->name('files.toggle-favorite')->where('file', '[0-g]+');
				Route::delete('/files/{file}/teams/{team}', [ApiFileController::class, 'revokeShare'])->name('files.revoke')->where(['file' => '[0-9]+', 'team' => '[0-9]+']);

				// Summarization Helper API
				Route::post('/summarize/upload', [UtilityController::class, 'processFileUploadForSummarization'])->name('summarize.upload');
				Route::post('/summarize/url', [UtilityController::class, 'processUrlForSummarization'])->name('summarize.url');
				Route::post('/summarize/text', [UtilityController::class, 'processTextForSummarization'])->name('summarize.text');
				Route::post('/summarize/file-id', [UtilityController::class, 'processFileIdForSummarization'])->name('summarize.file-id');

				// Transcription API
				Route::post('/transcribe/upload', [UtilityController::class, 'transcribeAudio'])->name('transcribe.upload');

				//Usage Log API
				Route::get('/usage-logs', [UsageController::class, 'getUsageLogs'])->name('usage-logs.index');
				Route::get('/usage-stats', [UsageController::class, 'getUsageStats'])->name('usage-stats.index');
			});
		});
	});

// Stripe Webhook Route
	Route::post('stripe/webhook', [WebhookController::class, 'handleWebhook'])->name('cashier.webhook');
