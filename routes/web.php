<?php

	use App\Http\Controllers\Api\ActionItemController;
	use App\Http\Controllers\Api\FileController as ApiFileController;
	use App\Http\Controllers\Api\MessageController as ApiMessageController;
	use App\Http\Controllers\Api\NoteController;
	use App\Http\Controllers\Api\TeamController as ApiTeamController;
	use App\Http\Controllers\AppController;
	use App\Http\Controllers\Auth\LoginController;
	use App\Http\Controllers\Auth\RegisterController;
	use App\Http\Controllers\ChatController;
	use App\Http\Controllers\FileController;
    use App\Http\Controllers\GroupChatController;
	use App\Http\Controllers\MessageController;
	use App\Http\Controllers\ProfileController;
	use App\Http\Controllers\TeamController;
	use App\Http\Controllers\UtilityController;
	use Illuminate\Support\Facades\Route;

// --- Authentication Routes (Generated by ui bootstrap --auth, modified) ---

// Login Routes
	Route::get('login', [LoginController::class, 'showLoginForm'])->name('login');
	Route::post('login', [LoginController::class, 'login']);
	Route::post('logout', [LoginController::class, 'logout'])->name('logout');

// Registration Routes
	Route::get('register', [RegisterController::class, 'showRegistrationForm'])->name('register');
	Route::post('register', [RegisterController::class, 'register']);

// Password Reset Routes (DISABLED) - Commented out or removed
// Route::get('password/reset', [ForgotPasswordController::class, 'showLinkRequestForm'])->name('password.request');
// Route::post('password/email', [ForgotPasswordController::class, 'sendResetLinkEmail'])->name('password.email');
// Route::get('password/reset/{token}', [ResetPasswordController::class, 'showResetForm'])->name('password.reset');
// Route::post('password/reset', [ResetPasswordController::class, 'reset'])->name('password.update');

// Email Verification Routes (DISABLED - primarily by removing MustVerifyEmail from User model)
// Route::get('email/verify', [VerificationController::class, 'show'])->name('verification.notice');
// Route::get('email/verify/{id}/{hash}', [VerificationController::class, 'verify'])->name('verification.verify');
// Route::post('email/resend', [VerificationController::class, 'resend'])->name('verification.resend');

// --- End Authentication Routes ---


	Route::get('/', [AppController::class, 'index'])->name('dashboard');
	Route::get('/home', [AppController::class, 'index'])->name('home');

// --- Main Application Routes (Require Authentication) ---
	Route::middleware('auth')->group(function () {
		// Page-level routes that return views
		Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
		Route::get('/teams', [TeamController::class, 'index'])->name('teams.index');
		Route::get('/messages', [MessageController::class, 'index'])->name('messages.inbox');
		Route::get('/files', [FileController::class, 'index'])->name('files.index');
		Route::get('/chat/{chatHeaderId?}', [ChatController::class, 'show'])
			->where('chatHeaderId', '[0-9]+')
			->name('chat.show');
        Route::get('/team/{team}/group-chat/{groupChatHeader?}', [GroupChatController::class, 'show'])
            ->where(['team' => '[0-9]+', 'groupChatHeader' => '[0-9]+'])
            ->name('group-chat.show');

		// Form submission routes for profile
		Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
		Route::put('/password', [ProfileController::class, 'updatePassword'])->name('password.update');
		Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');


		// API Routes (Prefixed with /api and protected by auth)
		// These routes are called via AJAX from the frontend.
		Route::prefix('api')->name('api.')->group(function () {
			// Chat API
			Route::post('/chat', [ChatController::class, 'store'])->name('chat.store');
            Route::get('/chat/headers', [ChatController::class, 'indexHeaders'])->name('chat.headers.index');
            Route::get('/chat/search', [ChatController::class, 'search'])->name('chat.search');
			Route::delete('/chat/messages/{userMessage}', [ChatController::class, 'destroyMessagePair'])
				->where('userMessage', '[0-9]+')
				->name('chat.messages.destroy');
			Route::delete('/chat/headers/{chatHeader}', [ChatController::class, 'destroyHeader'])
				->where('chatHeader', '[0-9]+')
				->name('chat.headers.destroy');
			Route::post('/chat/tts', [ChatController::class, 'textToSpeech'])->name('chat.tts');

            // Group Chat API
            Route::post('/group-chat/setup', [GroupChatController::class, 'setup'])->name('group-chat.setup');
            Route::post('/group-chat/store', [GroupChatController::class, 'store'])->name('group-chat.store');
            Route::get('/team/{team}/group-chats', [GroupChatController::class, 'indexHeaders'])->name('group-chat.headers.index')->where('team', '[0-9]+');
            Route::get('/team/{team}/group-chats/search', [GroupChatController::class, 'search'])->name('group-chat.search')->where('team', '[0-9]+');
            Route::delete('/group-chat/headers/{groupChatHeader}', [GroupChatController::class, 'destroyHeader'])->name('group-chat.headers.destroy')->where('groupChatHeader', '[0-9]+');
            Route::delete('/group-chat/messages/{userMessage}', [GroupChatController::class, 'destroyMessagePair'])->name('group-chat.messages.destroy')->where('userMessage', '[0-9]+');

			// Action Items API
			Route::get('/action-items', [ActionItemController::class, 'index'])->name('action-items.index');
			Route::post('/action-items', [ActionItemController::class, 'store'])->name('action-items.store');
			Route::patch('/action-items/{actionItem}', [ActionItemController::class, 'update'])
				->where('actionItem', '[0-9]+')
				->name('action-items.update');
			Route::delete('/action-items/{actionItem}', [ActionItemController::class, 'destroy'])
				->where('actionItem', '[0-9]+')
				->name('action-items.destroy');

			// Team API
			Route::get('/user/teams', [ApiTeamController::class, 'userTeams'])->name('user.teams');
			Route::post('/teams', [ApiTeamController::class, 'store'])->name('teams.store');
			Route::post('/teams/{team}/members', [ApiTeamController::class, 'addMember'])->name('teams.members.store')->where('team', '[0-9]+');
			// MODIFIED: Corrected regex from '[0-g]+' to '[0-9]+'
			Route::get('/teams/{team}/members', [ApiTeamController::class, 'getMembers'])->name('teams.members.index')->where('team', '[0-9]+');
			Route::post('/user/current-team', [ApiTeamController::class, 'switchTeam'])->name('user.current-team');

			// Message API
			Route::post('/teams/{team}/messages', [ApiMessageController::class, 'sendMessage'])->name('teams.messages.store')->where('team', '[0-9]+');
			Route::get('/user/inbox', [ApiMessageController::class, 'inbox'])->name('user.inbox');
			Route::get('/user/sent', [ApiMessageController::class, 'sent'])->name('user.sent');
			Route::get('/user/unread-count', [ApiMessageController::class, 'unreadCount'])->name('user.unread-count');
			// ADDED: The missing route to get a single message's details, fixing the 404 error.
			Route::get('/messages/{message}', [ApiMessageController::class, 'show'])->name('messages.show')->where('message', '[0-9]+');
			Route::patch('/messages/{message}/read', [ApiMessageController::class, 'markAsRead'])->name('messages.read')->where('message', '[0-9]+');

			// Note API
			Route::get('/notes', [NoteController::class, 'index'])->name('notes.index');
			Route::post('/notes', [NoteController::class, 'store'])->name('notes.store');
			Route::get('/notes/{note}', [NoteController::class, 'show'])->name('notes.show')->where('note', '[0-9]+');
			Route::put('/notes/{note}', [NoteController::class, 'update'])->name('notes.update')->where('note', '[0-9]+');
			Route::delete('/notes/{note}', [NoteController::class, 'destroy'])->name('notes.destroy')->where('note', '[0-9]+');

			// File Management API
			Route::get('/user/files', [ApiFileController::class, 'userFiles'])->name('user.files');
			Route::get('/teams/{team}/files', [ApiFileController::class, 'teamFiles'])->name('teams.files')->where('team', '[0-9]+');
			Route::post('/files', [ApiFileController::class, 'upload'])->name('files.upload');
			Route::get('/files/{file}/download', [ApiFileController::class, 'download'])->name('files.download')->where('file', '[0-9]+');
			Route::get('/files/{file}/preview', [ApiFileController::class, 'preview'])->name('files.preview')->where('file', '[0-9]+');
			Route::post('/files/{file}/share', [ApiFileController::class, 'share'])->name('files.share')->where('file', '[0-9]+');
			// MODIFIED: Cleaned up where constraints for multiple parameters
			Route::delete('/files/{file}/teams/{team}', [ApiFileController::class, 'revokeShare'])->name('files.revoke')->where(['file' => '[0-9]+', 'team' => '[0-9]+']);

			// Summarization Helper API
			Route::post('/summarize/upload', [UtilityController::class, 'processFileUploadForSummarization'])->name('summarize.upload');
			Route::post('/summarize/url', [UtilityController::class, 'processUrlForSummarization'])->name('summarize.url');
		});
	});

	// Route::auth(); is disabled in favor of manual routes above.
